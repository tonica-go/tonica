// Code generated by tonica.dev/cli/tonica. DO NOT EDIT.
package paymentv1

import (
	"net"

	"google.golang.org/grpc"

	"github.com/tonica-go/tonica/pkg/tonica/grpc/serviceconfig"
)

const ServiceName = "paymentservice-service"
const ServiceAddrEnvName = "PAYMENTSERVICE_SERVICE_GRPC_ADDR"

type PaymentServiceAddressConfig struct {
	PaymentServiceAddress  string `env:"PAYMENTSERVICE_SERVICE_GRPC_ADDR,required"`
	PaymentServiceGrpcPort string `env:"PAYMENTSERVICE_SERVICE_GRPC_PORT,required"`
}

func (cfg *PaymentServiceAddressConfig) CreatePaymentServiceConnection() *grpc.ClientConn {
	return serviceconfig.MustCreateNewNonBlockingServiceConnection(cfg.GetPaymentServiceConfig())
}

func (cfg *PaymentServiceAddressConfig) GetPaymentServiceConfig() serviceconfig.ServiceConfig {
	return serviceconfig.ServiceConfig{
		Address: net.JoinHostPort(cfg.PaymentServiceAddress, cfg.PaymentServiceGrpcPort),
		Name:    ServiceName,
	}
}

func (cfg *PaymentServiceAddressConfig) CreatePaymentServiceClient() PaymentServiceClient {
	return NewPaymentServiceClient(cfg.CreatePaymentServiceConnection())
}
